/*
 * Keymap ho√†n ch·ªânh v·ªõi encoder cho Corne Keyboard
 * L∆∞u t·∫°i: config/corne.keymap
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define FN 1

/ {
    // 1Ô∏è‚É£ C·∫•u h√¨nh encoder
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1>;
        triggers-per-rotation = <24>;
    };

    keymap {
        compatible = "zmk,keymap";

        // 2Ô∏è‚É£ Layer ch√≠nh (3x3 keys + encoder)
        default_layer {
            bindings = <
                &kp ESC    &kp SPACE   &mo FN      // Encoder t·∫°i v·ªã tr√≠ [3]
                &kp BSPC   &kp UP      &kp ENTER
                &kp LEFT   &kp DOWN    &kp RIGHT
            >;
            
            // üîÑ Encoder: Volume (xoay) + Nh·∫•n: Mute
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        // 3Ô∏è‚É£ Layer ch·ª©c nƒÉng
        fn_layer {
            bindings = <
                &none      &none       &trans      // Gi·ªØ nguy√™n v·ªã tr√≠ encoder
                &none      &kp C_MUTE  &bt BT_NXT
                &sys_reset &bootloader &bt BT_CLR
            >;
            
            // üîÑ Encoder: Cu·ªôn trang (xoay) + Nh·∫•n: Play/Pause
            sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };
    };
};

// 4Ô∏è‚É£ C·∫•u h√¨nh ph·∫ßn c·ª©ng encoder (cho Corne)
/ {
    encoders {
        compatible = "zmk,encoders";
        encoder_1: encoder_1 {
            status = "okay";
            a-gpios = <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
            b-gpios = <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        };
    };
};
